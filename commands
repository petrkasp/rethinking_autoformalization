# Identity matching
export EQ_BENCHMARK=rautoformalizer-generated
mkdir -p ./result && \
cp ./data/human_equivalence/${EQ_BENCHMARK}/autoformalization.json ./result && \
.env/bin/python -m equivalence.id_match \
    --eval_set proofnet \
    --working_root ./result \
    --dataset_root ./data/


# Definitional eq
export EQ_BENCHMARK=rautoformalizer-generated
mkdir -p ./result && \
cp ./data/human_equivalence/${EQ_BENCHMARK}/autoformalization.json ./result && \
.env/bin/python -m equivalence.def_eq \
    --mathlib_root ./ \
    --eval_set proofnet \
    --working_root ./result \
    --dataset_root ./data/ \
    --repl_root .lake/packages/REPL \
    --num_concurrency 1


# BEq command similar to what is in README.md
export CUDA_VISIBLE_DEVICES=0
export VLLM_ALLOW_DEPRECATED_BEAM_SEARCH=1
export BEQ_LEVEL=basic
export EQ_BENCHMARK=rautoformalizer-generated
mkdir -p ./result && \
cp ./data/human_equivalence/${EQ_BENCHMARK}/autoformalization.json ./result && \
.env/bin/python -m equivalence.beq_${BEQ_LEVEL} \
    --port 8080 \
    --trust-remote-code \
    --enable-prefix-caching \
    --mathlib_root ./ \
    --eval_set proofnet \
    --working_root ./result \
    --dataset_root ./data/ \
    --repl_root .lake/packages/REPL \
    --try_num 16 \
    --num_concurrency 1 \
    --temperature 0.0 \
    --model ./internlm2-math-plus-20b


# Testing BEq command. It is better to leave out the model parameter entirely.
export CUDA_VISIBLE_DEVICES=0
export VLLM_ALLOW_DEPRECATED_BEAM_SEARCH=1
export BEQ_LEVEL=basic
export EQ_BENCHMARK=rautoformalizer-generated
mkdir -p ./result && \
cp ./data/human_equivalence/${EQ_BENCHMARK}/autoformalization.json ./result && \
.env/bin/python -m equivalence.beq_${BEQ_LEVEL} \
    --port 8080 \
    --trust-remote-code \
    --enable-prefix-caching \
    --mathlib_root ./ \
    --eval_set proofnet \
    --working_root ./result \
    --dataset_root ./data/ \
    --repl_root .lake/packages/REPL \
    --try_num 16 \
    --num_concurrency 1 \
    --temperature 0.0 \
    --model ./Llama-3.2-1B-Instruct


# BEq command similar to what is in the paper.
export CUDA_VISIBLE_DEVICES=0
export VLLM_ALLOW_DEPRECATED_BEAM_SEARCH=1
export BEQ_LEVEL=normal
export EQ_BENCHMARK=rautoformalizer-generated
mkdir -p ./result && \
cp ./data/human_equivalence/${EQ_BENCHMARK}/autoformalization.json ./result && \
.env/bin/python -m equivalence.beq_${BEQ_LEVEL} \
    --port 8080 \
    --trust-remote-code \
    --enable-prefix-caching \
    --mathlib_root ./ \
    --eval_set proofnet \
    --working_root ./result \
    --dataset_root ./data/ \
    --repl_root .lake/packages/REPL \
    --try_num 16 \
    --num_concurrency 1 \
    --temperature 0.7 \
    --model ./internlm2-math-plus-20b


# Sparse retrieval
mkdir -p ./result_bm25_f && \
.env/bin/python -m retriever.retrieve_bm25 \
    --model_path ./bm25_f \
    --save_path ./result_bm25_f \
    --eval_set proofnet


# Dense retrieval
mkdir -p ./result_dense && \
.env/bin/python -m retriever.retrieve_dr \
    --model_path ./dependency_retriever_f \
    --save_path ./result_dense \
    --eval_set proofnet

# Dense retrieval with inform, Con-NF
mkdir -p ./result_dense_inf_con && \
.env/bin/python -m retriever.retrieve_dr \
    --model_path ./dependency_retriever_f_if \
    --save_path ./result_dense_inf_con \
    --eval_set connf

